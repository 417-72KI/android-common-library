plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'jp.room417.common.sampleApp'
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.4"
    }

    defaultConfig {
        applicationId 'jp.room417.common.sampleApp'
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        try {
            def properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            buildConfigField("String", "TWITTER_API_KEY", "\"${properties.getProperty("TWITTER_API_KEY")}\"")
            buildConfigField("String", "TWITTER_API_SECRET", "\"${properties.getProperty("TWITTER_API_SECRET")}\"")
            buildConfigField("String", "TWITTER_CALLBACK_URL", "\"${properties.getProperty("TWITTER_CALLBACK_URL")}\"")
        } catch (FileNotFoundException ignored) {
            buildConfigField("String", "TWITTER_API_KEY", "\"${System.getenv("TWITTER_API_KEY")}\"")
            buildConfigField("String", "TWITTER_API_SECRET", "\"${System.getenv("TWITTER_API_SECRET")}\"")
            buildConfigField("String", "TWITTER_CALLBACK_URL", "\"${System.getenv("TWITTER_CALLBACK_URL")}\"")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility java_version
        targetCompatibility java_version
    }
    kotlinOptions {
        jvmTarget = jvm_target
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation project(path: ':common')
    implementation project(path: ':twitter')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation 'androidx.compose.material:material:1.4.2'

    def composeBom = platform('androidx.compose:compose-bom:2023.04.01')
    implementation composeBom
    androidTestImplementation composeBom

    implementation 'androidx.compose.ui:ui'

    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$ktx_version"

    implementation 'com.google.android.material:material:1.8.0'

    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
